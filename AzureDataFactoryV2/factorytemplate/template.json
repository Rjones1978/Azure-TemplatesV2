{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ADFname": {
            "type": "string"
        },
        "version": {
            "defaultValue": "V2",
            "type": "string"
        },
        "location": {
            "defaultValue": "southcentralus",
            "type": "string"
        },
        "apiVersion": {
            "defaultValue": "2018-06-01",
            "type": "string"
        },
        "tagsByResource": {
            "type": "Object",
            "defaultValue":{
            }
        },
        "vNetEnabled": {
            "defaultValue": false,
            "type": "bool"
        },
        "publicNetworkAccess": {
            "defaultValue": true,
            "type": "bool"
        },
        "gitConfigureLater": {
            "defaultValue": false,
            "type": "bool"
        },
        "gitRepoType": {
            "defaultValue": "FactoryGitHubConfiguration",
            "type": "string"
        },
        "gitAccountName": {
            "defaultValue": "rjones1978",
            "type": "string"
        },
        "gitProjectName": {
            "defaultValue": "",
            "type": "string"
        },
        "gitRepositoryName": {
            "defaultValue": "Azure-TemplatesV2",
            "type": "string"
        },
        "gitCollaborationBranch": {
            "defaultValue": "main",
            "type": "string"
        },
        "gitRootFolder": {
            "defaultValue": "/AzureDataFactoryV2",
            "type": "string"
        },
        "userAssignedIdentities": {
            "defaultValue": {
                "type": "SystemAssigned"
            },
            "type": "object"
        },
        "userAssignedIdentitiesStr": {
            "defaultValue": "",
            "type": "string"
        },
        "vaultBaseUrl": {
            "defaultValue": "",
            "type": "string"
        },
        "keyName": {
            "defaultValue": "",
            "type": "string"
        },
        "keyVersion": {
            "defaultValue": "",
            "type": "string"
        },
        "enableCMK": {
            "defaultValue": false,
            "type": "bool"
        },
        "cmkIdentity": {
            "defaultValue": "",
            "type": "string"
        }
    },
    "resources": [
        {
            "condition": "[equals(parameters('version'), 'V2')]",
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[parameters('ADFname')]",
            "location": "[parameters('location')]",
            "identity": "[if(parameters('enableCMK'),json(parameters('userAssignedIdentitiesStr')), parameters('userAssignedIdentities'))]",
            "properties": {
                "repoConfiguration": "[if(bool(parameters('gitConfigureLater')), json('null'), json(concat('{\"type\": \"', parameters('gitRepoType'), '\",','\"accountName\": \"', parameters('gitAccountName'), '\",','\"repositoryName\": \"', parameters('gitRepositoryName'), '\",', if(equals(parameters('gitRepoType'), 'FactoryVSTSConfiguration'), concat('\"projectName\": \"', parameters('gitProjectName'), '\",'), ''),'\"collaborationBranch\": \"', parameters('gitCollaborationBranch'), '\",','\"rootFolder\": \"', parameters('gitRootFolder'), '\"}')))]",
                "publicNetworkAccess": "[if(bool(parameters('publicNetworkAccess')), 'Enabled', 'Disabled')]",
                "encryption": "[if(bool(parameters('enableCMK')), json(concat('{\"identity\":{\"userAssignedIdentity\":\"', parameters('cmkIdentity'), '\"},','\"VaultBaseUrl\": \"', parameters('vaultBaseUrl'), '\",','\"KeyName\": \"', parameters('keyName'), '\",','\"KeyVersion\": \"', parameters('keyVersion'), '\"}')), json('null'))]"
            },
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.DataFactory/factories'), parameters('tagsByResource')['Microsoft.DataFactory/factories'], json('{}')) ]",
            "resources": [
                {
                    "condition": "[and(equals(parameters('version'), 'V2'), parameters('vNetEnabled'))]",
                    "name": "[concat(parameters('ADFname'), '/default')]",
                    "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
                    "apiVersion": "2018-06-01",
                    "properties": {},
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/factories/', parameters('ADFname'))]"
                    ]
                },
                {
                    "condition": "[and(equals(parameters('version'), 'V2'), parameters('vNetEnabled'))]",
                    "name": "[concat(parameters('ADFname'), '/AutoResolveIntegrationRuntime')]",
                    "type": "Microsoft.DataFactory/factories/integrationRuntimes",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "type": "Managed",
                        "managedVirtualNetwork": {
                            "referenceName": "default",
                            "type": "ManagedVirtualNetworkReference"
                        },
                        "typeProperties": {
                            "computeProperties": {
                                "location": "AutoResolve"
                            }
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.DataFactory/factories/', parameters('ADFname'))]",
                        "[concat('Microsoft.DataFactory/factories/', parameters('ADFname'), '/managedVirtualNetworks/default')]"
                    ]
                }
            ]
        },
        {
            "condition": "[equals(parameters('version'), 'V1')]",
            "apiVersion": "2015-01-01-preview",
            "name": "[parameters('ADFname')]",
            "location": "[if(equals(parameters('version'), 'V1'), parameters('location'), 'eastus')]",
            "type": "Microsoft.DataFactory/dataFactories",
            "properties": {},
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.DataFactory/dataFactories'), parameters('tagsByResource')['Microsoft.DataFactory/dataFactories'], json('{}')) ]"
        }
    ]
}
